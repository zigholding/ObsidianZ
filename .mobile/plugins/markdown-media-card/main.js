/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => MediaCardPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");

// node_modules/.pnpm/@zhouhua-dev+remark-media-card@1.1.5/node_modules/@zhouhua-dev/remark-media-card/dist/lib/utils.js
var langMap = {
  publishDate: {
    book: "\u51FA\u7248\u65F6\u95F4",
    music: "\u53D1\u884C\u65F6\u95F4",
    movie: "\u4E0A\u6620\u65F6\u95F4"
  }
};
function html(strings, ...values) {
  let htmlString = "";
  for (const [i2, string_] of strings.entries()) {
    htmlString += string_;
    if (i2 < values.length) {
      htmlString += values[i2];
    }
  }
  return htmlString;
}
function template(cardMeta) {
  const { url, cover, author, artist, director, rating, title, publishDate, type, actors, introduction, width, ...rest } = cardMeta;
  const cardItems = [`<strong>${title}</strong>`];
  if (author && type === "book") {
    cardItems.push(`\u4F5C\u8005\uFF1A${author}`);
  }
  if (artist && type === "music") {
    cardItems.push(`\u827A\u672F\u5BB6\uFF1A${artist}`);
  }
  if (director && type === "movie") {
    cardItems.push(`\u5BFC\u6F14\uFF1A${director}`);
  }
  if (actors && type === "movie") {
    cardItems.push(`\u4E3B\u6F14\uFF1A${actors}`);
  }
  if (langMap.publishDate[type] && publishDate) {
    cardItems.push(`${langMap.publishDate[type]}\uFF1A${publishDate}`);
  }
  if (rating) {
    cardItems.push(`\u8BC4\u5206\uFF1A${rating}`);
  }
  for (const [key, value] of Object.entries(rest)) {
    cardItems.push(`${key}\uFF1A${value}`);
  }
  return html`
    <div class="media-card-wrap" style="margin: 0 auto;">
      ${url ? `<a
            href="${url}"
            target="_blank"
            style="text-decoration: none;"
          >` : ""}
      <div
        class="media-card"
        style="
          max-width: 100%;
          ${width ? `width: ${width}px;` : ""}
          display:flex;
          flex-direction: column;
          margin:30px 20px;
          padding: 20px;
          border-radius: 15px;
          position: relative;
          overflow: hidden;
          text-decoration: none;
          z-index: 0;
        "
      >
        <div
          class="media-card-bg"
          style="
            width: 110%;
            height: 110%;
            position: absolute;
            top: -5%;
            left: -5%;
            z-index: -1;
            border-radius: 15px;
            background-color: antiquewhite;
            filter: blur(15px) brightness(0.6);
          "
        >
          <img
            src="${cover}"
            alt="bg"
            referrerpolicy="no-referrer"
            style="width: 100%; height: 100%; object-fit: cover;"
          />
        </div>
        <div
          class="media-card-main"
          style="
            display: flex;
            flex-direction: column;
            font-family: 'Courier New', Courier, monospace;
            color: antiquewhite;
          "
        >
          <div
            class="media-card-meta"
            style="
              display: flex;
              align-items: center;
              gap: 12px;
            "
          >
            <div
              class="media-card-cover"
              style="
                height: 130px;
                width: 80px;
              "
            >
              <img
                src="${cover}"
                alt="cover"
                referrerpolicy="no-referrer"
                style="width: 100%; height: 100%; object-fit: contain;"
              />
            </div>
            <div
              style="
                display: flex;
                flex-direction: column;
                gap: 6px;
                line-height: 1.4;
              "
            >
              ${cardItems.map((string_) => `<div>${string_}</div>`).join("")}
            </div>
          </div>
          ${introduction ? html`<div
                class="media-card-introduction"
                style="
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: pre-line;
                -webkit-box-orient: vertical;
                -webkit-line-clamp: 3;
                display: -webkit-box;
                font-size: 14px;
                margin-top: 12px;
              "
              >
                ${introduction.replace("\n", "<br />")}
              </div>` : ""}
        </div>
      </div>
      ${url ? html`</a>` : ""}
    </div>
  `;
}

// i18n/formatters.ts
var initFormatters = (locale2) => {
  const formatters = {
    // add your formatter functions here
  };
  return formatters;
};

// node_modules/.pnpm/typesafe-i18n@5.26.2_typescript@4.7.4/node_modules/typesafe-i18n/runtime/esm/parser/src/basic.mjs
var removeEmptyValues = (object) => Object.fromEntries(
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  Object.entries(object).map(([key, value]) => key !== "i" && value && value != "0" && [key, value]).filter(Boolean)
);
var trimAllValues = (part) => Object.fromEntries(Object.keys(part).map((key) => {
  const val = part[key];
  return [
    key,
    Array.isArray(val) ? val.map((v) => v === null || v === void 0 ? void 0 : v.trim()) : val === !!val ? val : val === null || val === void 0 ? void 0 : val.trim()
  ];
}));
var parseArgumentPart = (text) => {
  const [keyPart = "", ...formatterKeys] = text.split("|");
  const [keyWithoutType = "", type] = keyPart.split(":");
  const [key, isOptional] = keyWithoutType.split("?");
  return { k: key, i: type, n: isOptional === "", f: formatterKeys };
};
var isBasicPluralPart = (part) => !!(part.o || part.r);
var parsePluralPart = (content, lastAccessor) => {
  let [key, values] = content.split(":");
  if (!values) {
    values = key;
    key = lastAccessor;
  }
  const entries = values.split("|");
  const [zero, one, two, few, many, rest] = entries;
  const nrOfEntries = entries.filter((entry) => entry !== void 0).length;
  if (nrOfEntries === 1) {
    return { k: key, r: zero };
  }
  if (nrOfEntries === 2) {
    return { k: key, o: zero, r: one };
  }
  if (nrOfEntries === 3) {
    return { k: key, z: zero, o: one, r: two };
  }
  return { k: key, z: zero, o: one, t: two, f: few, m: many, r: rest };
};
var REGEX_SWITCH_CASE = /^\{.*\}$/;
var parseCases = (text) => Object.fromEntries(removeOuterBrackets(text).split(",").map((part) => part.split(":")).reduce((accumulator, entry) => {
  if (entry.length === 2) {
    return [...accumulator, entry.map((entry2) => entry2.trim())];
  }
  ;
  accumulator[accumulator.length - 1][1] += "," + entry[0];
  return accumulator;
}, []));
var REGEX_BRACKETS_SPLIT = /(\{(?:[^{}]+|\{(?:[^{}]+)*\})*\})/g;
var removeOuterBrackets = (text) => text.substring(1, text.length - 1);
var parseRawText = (rawText, optimize = true, firstKey = "", lastKey = "") => rawText.split(REGEX_BRACKETS_SPLIT).map((part) => {
  if (!part.match(REGEX_BRACKETS_SPLIT)) {
    return part;
  }
  const content = removeOuterBrackets(part);
  if (content.startsWith("{")) {
    return parsePluralPart(removeOuterBrackets(content), lastKey);
  }
  const parsedPart = parseArgumentPart(content);
  lastKey = parsedPart.k || lastKey;
  !firstKey && (firstKey = lastKey);
  return parsedPart;
}).map((part) => {
  if (typeof part === "string")
    return part;
  if (!part.k)
    part.k = firstKey || "0";
  const trimmed = trimAllValues(part);
  return optimize ? removeEmptyValues(trimmed) : trimmed;
});

// node_modules/.pnpm/typesafe-i18n@5.26.2_typescript@4.7.4/node_modules/typesafe-i18n/runtime/esm/runtime/src/core.mjs
var applyFormatters = (formatters, formatterKeys, initialValue) => formatterKeys.reduce((value, formatterKey) => {
  var _a2, _b;
  return (_b = formatterKey.match(REGEX_SWITCH_CASE) ? ((cases) => {
    var _a3;
    return (_a3 = cases[value]) !== null && _a3 !== void 0 ? _a3 : cases["*"];
  })(parseCases(formatterKey)) : (_a2 = formatters[formatterKey]) === null || _a2 === void 0 ? void 0 : _a2.call(formatters, value)) !== null && _b !== void 0 ? _b : value;
}, initialValue);
var getPlural = (pluralRules, { z, o: o2, t: t3, f, m: m2, r: r4 }, value) => {
  switch (z && value == 0 ? "zero" : pluralRules.select(value)) {
    case "zero":
      return z;
    case "one":
      return o2;
    case "two":
      return t3;
    case "few":
      return f !== null && f !== void 0 ? f : r4;
    case "many":
      return m2 !== null && m2 !== void 0 ? m2 : r4;
    default:
      return r4;
  }
};
var REGEX_PLURAL_VALUE_INJECTION = /\?\?/g;
var applyArguments = (textParts, pluralRules, formatters, args) => textParts.map((part) => {
  if (typeof part === "string") {
    return part;
  }
  const { k: key = "0", f: formatterKeys = [] } = part;
  const value = args[key];
  if (isBasicPluralPart(part)) {
    return ((typeof value === "boolean" ? value ? part.o : part.r : getPlural(pluralRules, part, value)) || "").replace(REGEX_PLURAL_VALUE_INJECTION, value);
  }
  const formattedValue = formatterKeys.length ? applyFormatters(formatters, formatterKeys, value) : value;
  return ("" + (formattedValue !== null && formattedValue !== void 0 ? formattedValue : "")).trim();
}).join("");
var translate = (textParts, pluralRules, formatters, args) => {
  const firstArg = args[0];
  const isObject = firstArg && typeof firstArg === "object" && firstArg.constructor === Object;
  const transformedArgs = args.length === 1 && isObject ? firstArg : args;
  return applyArguments(textParts, pluralRules, formatters, transformedArgs);
};

// node_modules/.pnpm/typesafe-i18n@5.26.2_typescript@4.7.4/node_modules/typesafe-i18n/runtime/esm/runtime/src/util.string.mjs
var getPartsFromString = (cache, text) => cache[text] || (cache[text] = parseRawText(text));

// node_modules/.pnpm/typesafe-i18n@5.26.2_typescript@4.7.4/node_modules/typesafe-i18n/runtime/esm/runtime/src/util.object.mjs
var getTranslateInstance = (locale2, formatters) => {
  const cache = {};
  const pluralRules = new Intl.PluralRules(locale2);
  return (text, ...args) => translate(getPartsFromString(cache, text), pluralRules, formatters, args);
};
function i18nObject(locale2, translations, formatters = {}) {
  return createProxy(translations, getTranslateInstance(locale2, formatters));
}
var wrap = (proxyObject = {}, translateFn) => typeof proxyObject === "string" ? translateFn.bind(null, proxyObject) : Object.assign(Object.defineProperty(() => "", "name", { writable: true }), proxyObject);
var createProxy = (proxyObject, translateFn) => new Proxy(wrap(proxyObject, translateFn), {
  get: (target, key) => {
    if (key === Symbol.iterator)
      return [][Symbol.iterator].bind(Object.values(target).map((entry) => wrap(entry, translateFn)));
    return createProxy(target[key], translateFn);
  }
});

// node_modules/.pnpm/typesafe-i18n@5.26.2_typescript@4.7.4/node_modules/typesafe-i18n/runtime/esm/runtime/src/util.instance.mjs
var i18n = (translations, formatters) => {
  const cache = {};
  return new Proxy({}, {
    get: (_target, locale2) => cache[locale2] || (cache[locale2] = i18nObject(locale2, translations[locale2], formatters[locale2]))
  });
};

// node_modules/.pnpm/typesafe-i18n@5.26.2_typescript@4.7.4/node_modules/typesafe-i18n/detectors/detectors/browser/document-cookie.mjs
var r = (o2, c2) => {
  var _a2;
  let t3 = (_a2 = o2 == null ? void 0 : o2.split(";").map((e3) => e3.trim()).find((e3) => e3.startsWith(c2))) == null ? void 0 : _a2.split("=")[1];
  return t3 ? [t3] : [];
};
var i = (o2 = "lang") => () => r(document == null ? void 0 : document.cookie, o2);
var n = i();

// node_modules/.pnpm/typesafe-i18n@5.26.2_typescript@4.7.4/node_modules/typesafe-i18n/detectors/detectors/browser/localstorage-detector.mjs
var e = (r4) => !!r4;
var t = (r4 = "lang") => () => {
  var _a2;
  return [(_a2 = window == null ? void 0 : window.localStorage) == null ? void 0 : _a2.getItem(r4)].filter(e);
};
var xe = t();

// node_modules/.pnpm/typesafe-i18n@5.26.2_typescript@4.7.4/node_modules/typesafe-i18n/detectors/detectors/browser/query-string.mjs
var o = (e3 = "lang") => () => {
  var _a2, _b;
  let t3 = (_b = (_a2 = location == null ? void 0 : location.search) == null ? void 0 : _a2.slice(1).split("&").find((r4) => r4.startsWith(e3))) == null ? void 0 : _b.split("=")[1];
  return t3 ? [t3] : [];
};
var c = o();

// node_modules/.pnpm/typesafe-i18n@5.26.2_typescript@4.7.4/node_modules/typesafe-i18n/detectors/detectors/browser/sessionstorage-detector.mjs
var r2 = (e3) => !!e3;
var t2 = (e3 = "lang") => () => {
  var _a2;
  return [(_a2 = window == null ? void 0 : window.sessionStorage) == null ? void 0 : _a2.getItem(e3)].filter(r2);
};
var lr = t2();

// node_modules/.pnpm/typesafe-i18n@5.26.2_typescript@4.7.4/node_modules/typesafe-i18n/utils/index.mjs
var objectExtend = extend;
function extend() {
  var args = [].slice.call(arguments);
  var deep = false;
  if (typeof args[0] == "boolean") {
    deep = args.shift();
  }
  var result = args[0];
  if (isUnextendable(result)) {
    throw new Error("extendee must be an object");
  }
  var extenders = args.slice(1);
  var len = extenders.length;
  for (var i2 = 0; i2 < len; i2++) {
    var extender = extenders[i2];
    for (var key in extender) {
      if (Object.prototype.hasOwnProperty.call(extender, key)) {
        var value = extender[key];
        if (deep && isCloneable(value)) {
          var base = Array.isArray(value) ? [] : {};
          result[key] = extend(
            true,
            Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key]) ? result[key] : base,
            value
          );
        } else {
          result[key] = value;
        }
      }
    }
  }
  return result;
}
function isCloneable(obj) {
  return Array.isArray(obj) || {}.toString.call(obj) == "[object Object]";
}
function isUnextendable(val) {
  return !val || typeof val != "object" && typeof val != "function";
}
var initExtendDictionary = () => (base, part) => objectExtend({}, base, part);
var extendDictionary = initExtendDictionary();

// i18n/i18n-util.ts
var locales = [
  "en",
  "zh"
];
var loadedLocales = {};
var loadedFormatters = {};
var extendDictionary2 = initExtendDictionary();
var i18n2 = () => i18n(loadedLocales, loadedFormatters);

// i18n/en/index.ts
var en = {
  // TODO: your translations go here
  invalid: "Invalid YAML format."
};
var en_default = en;

// i18n/zh/index.ts
var de = {
  // this is an example Translation, just rename or delete this folder if you want
  invalid: "YAML \u89E3\u6790\u9519\u8BEF\u3002"
};
var zh_default = de;

// i18n/i18n-util.sync.ts
var localeTranslations = {
  en: en_default,
  zh: zh_default
};
var loadLocale = (locale2) => {
  if (loadedLocales[locale2])
    return;
  loadedLocales[locale2] = localeTranslations[locale2];
  loadFormatters(locale2);
};
var loadAllLocales = () => locales.forEach(loadLocale);
var loadFormatters = (locale2) => void (loadedFormatters[locale2] = initFormatters(locale2));

// main.ts
loadAllLocales();
var locale = "en";
var _a;
try {
  locale = /^zh/.test(((_a = global == null ? void 0 : global.i18next) == null ? void 0 : _a.language) || "") ? "zh" : "en";
} catch (e3) {
}
var L = i18n2()[locale];
function appendErrorMsg(el) {
  const container = el.querySelector("pre.language-yaml");
  if (container) {
    container.createEl("div", {
      cls: "error-msg",
      text: L.invalid()
    });
  }
}
async function calcImageUrl(path, sourcePath) {
  try {
    const div = createDiv();
    await import_obsidian.MarkdownRenderer.render(
      this.app,
      `![](${path})`,
      div,
      sourcePath,
      new import_obsidian.MarkdownRenderChild(div)
    );
    return div.find("img").getAttribute("src");
  } catch (e3) {
    return path;
  }
}
var MediaCardPlugin = class extends import_obsidian.Plugin {
  async onload() {
    this.registerMarkdownCodeBlockProcessor(
      "media-card",
      async (source, el, ctx) => {
        el.addClass("markdown-media-card-render");
        try {
          const data = (0, import_obsidian.parseYaml)(source);
          if (data.cover) {
            data.cover = await calcImageUrl(data.cover, ctx.sourcePath);
          }
          const html2 = template(data);
          const fragment = (0, import_obsidian.sanitizeHTMLToDom)(html2);
          el.appendChild(fragment);
        } catch (e3) {
          import_obsidian.MarkdownRenderer.render(
            this.app,
            ["```yaml", source, "```"].join("\n"),
            el,
            ctx.sourcePath,
            new import_obsidian.MarkdownRenderChild(el)
          );
          appendErrorMsg(el);
        }
      }
    );
  }
  onunload() {
  }
};

/* nosourcemap */